server {
    listen 80;
    server_name localhost dev.netanya-incident.local;

    # Security headers for development
    add_header X-Environment "development" always;

    # Health check endpoint (no rate limiting)
    location /health {
        limit_req zone=health burst=50 nodelay;
        proxy_pass http://incident_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check specific settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # API endpoints
    location /incidents {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://incident_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API specific settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering off;
    }

    # Documentation endpoints (development only)
    location ~ ^/(docs|redoc|openapi\.json) {
        proxy_pass http://incident_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Root and other endpoints
    location / {
        proxy_pass http://incident_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Mock SharePoint admin interface for development
    location /mock-admin {
        proxy_pass http://mock-sharepoint:8080/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        return 500 '{"error": "Internal server error", "status": 500}';
        add_header Content-Type application/json;
    }
    
    location = /404.html {
        return 404 '{"error": "Not found", "status": 404}';
        add_header Content-Type application/json;
    }
}
